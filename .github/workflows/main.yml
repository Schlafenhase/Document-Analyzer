name: CI/CD Pipeline

on:
  push:
    branches: [ master, release-1.0 ]
  pull_request:
    branches: [ master, develop-1.0, release-1.0 ]

jobs:
  build-web:
  
    defaults:
      run:
        working-directory: ./Web

    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node-version: [15.x]
        os: [ubuntu-latest, windows-latest, macOS-latest]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
      
    - name: Install dependencies
      run: npm ci
      
    - name: Rebuild Node-Sass
      run: npm rebuild node-sass

    - name: Build
      run: npm run build
      env:
        CI: false
      
  test-web:
      needs: [build-web]
      
      defaults:
        run:
          working-directory: ./Web
          
      name: Test on ${{ matrix.os }}
      runs-on: ${{ matrix.os }}
      strategy:
        matrix:
          node-version: [15.x]
          os: [ubuntu-latest, windows-latest, macOS-latest]
      
      steps:    
      - name: Checkout repository
        uses: actions/checkout@v2
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run the tests
        run: npm test
        
  build-api:
    defaults:
      run:
        working-directory: ./BackEnd/Api
          
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v1
      
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
      
    - name: Clean
      run: dotnet clean && dotnet nuget locals all --clear
      
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build
      run: dotnet build --no-restore

  test-api:
    needs: [build-api]
    
    defaults:
      run:
        working-directory: ./BackEnd/Api
          
    name: Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v1
      
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
        
    - name: Clean
      run: dotnet clean && dotnet nuget locals all --clear
      
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Test
      run: dotnet test
      
  analyze-web:
    needs: [test-web]
    
    defaults:
      run:
        working-directory: ./Web
  
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
          
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_WEB }}

  analyze-api:
    needs: [test-api]
    
    defaults:
      run:
        working-directory: ./BackEnd/Api
  
    runs-on: windows-latest
    
    steps:
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11
      
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
          
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
          
      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v1
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
          
      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
          
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_API }}
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"schlafenhase_Document-Analyzer_API" /o:"schlafenhase" /d:sonar.login="${{ secrets.SONAR_TOKEN_API }}" /d:sonar.host.url="https://sonarcloud.io"
          dotnet clean
          dotnet nuget locals all --clear
          dotnet restore
          dotnet build --no-restore
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN_API }}"
